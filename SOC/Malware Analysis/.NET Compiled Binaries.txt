.NET binaries are compiled files containing code written in languages compatible with the .NET framework, such as C#, VB.NET, F#, or managed C++. These binaries are executable files (with the .exe extension) or dynamic link libraries (DLLs with the .dll extension). They can also be assemblies that contain multiple types and resources.

Compared to other programming languages like C or C++, languages that use .NET, such as C#, don't directly translate the code into machine code after compilation. Instead, they use an intermediate language (IL), like a pseudocode, and translate it into native machine code during runtime via a Common Language Runtime (CLR) environment.


-- Basic C# Programming --

# Namespaces, classes, functions and variables

namespace DemoOnly
{
    internal class BasicProgramming
    {
        static void Main(string[] args)
        {
            string to_print = "Hello World!";
            ShowOutput(to_print);
        }

        public static void ShowOutput(string text)
        {
            // prints the contents of the text variable - or simply, this is a print function
            Console.WriteLine(text);
        }
    }
}


# For loops

// for (initialisation; condition; iteration)
for (int i = 1; i <= 5; i++) {
    Console.WriteLine("I love McSkidy");
}


# Conditional statements

if (number > 5)
{
    Console.WriteLine("The number is greater than 5");
}
else
{
    Console.WriteLine("The number is less than or equal to 5");
}


# Importing modules

using System;
// after importing, we can now use all the classes and functions available from the System namespace























