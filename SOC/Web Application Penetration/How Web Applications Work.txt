
In order to detect an anomaly we should first understand how the technology works. Web applications communicate via the Hyper-Text Transfer Protocol (HTTP).

HTTP communication takes place between the server and the client. First, the client requests a specific resource from the server. The server receives the HTTP request and sends back an (HTTP Response) to the client after passing it through certain controls and processes. The client’s device receives the response and displays the requested resource in an appropriate format.


-- HTTP Request --

An HTTP Request consists of a `request line`, `request headers` and a `request message body`. A request line consists of the HTTP method and the resource requested from the web server. The request header contains certain headers that the server will process. The request message body contains data that is intended to be sent to the server.

1. The GET method states that the resource “/” is requested from the server. Because there is no name, rather a symbol such as “/” means that the web server’s main page is requested.
2. Nowadays there are web applications that belong to more than one domain found on a single web server, so browsers use“Host” header to describe which domain the requested resource belongs to.
3. When a web application wants to store information on the client’s device it stores it in a “Cookie” header. Cookies are generally used to store session information. Therefore, you do not have to re enter your username and password when you visit a web application that requires login. 
4. The “Upgrade-Insecure-Requests” header is used to state that the client wants to communicate with encryption (SSL).
5. There is information regarding the client’s browser and operating system under the “User-Agent" header. Web servers use this information to send specific HTTP Responses to the client. You can find some automated vulnerability scanners by looking under this header.
6. The type of data requested is found under the “Accept” header.
7. The encoding type that the client understands is found under “Accept-Encoding” header. You can usually find compression algorithm names under this header.
8. Under the “Accept-Language” header you can find the clients language information. The web server uses this information to display the prepared content in the client’s language.
9. The “Connection” header shows how the HTTP connection will be made. If there is any data such as “close” found here, it means that the TCP connection will be closed after the HTTP response is received. If you see “Keep-alive” this means that the connection will be continued.
10. An empty line is put between the HTTP Request Header and the HTTP Request Message Body to make a partition.
11. Other data intended to be sent to the web application is found within the Request Message Body. If the HTTP POST method is used, then POST parameters can be found here.


-- HTTP Response --

A HTTP Response Message contains a `Status Line`, `Response Headers`, and a `Response Body`. The Status Line contains the status code (such as 200: OK) and HTTP protocol information. There are headers used for numerous purposes within the Response Header. Data related to the requested resource is found within the Response Body.


- Status Line -

There is information about the HTTP version and HTTP response status code in the Status Line. HTTP response status code is used to describe the status of the request. There are many HTTP response status codes, but they can be summarized as so:

· 100-199: Informational responses
· 200-299: Successful responses
· 300-399: Redirection messages
· 400-499: Client error responses
· 500-599: Server error responses


- Response Headers -

Here are some HTTP Response Headers that you may come across frequently:

· Date: The exact time the server sent the HTTP Response to the client.
· Connection: It states how the connection will be handled, just like in the HTTP Request header. 
· Server: Information about the server’s operating system and the web server’s version. 
· Last-Modified: Information about when the requested resource was changed. This header is used for the cache mechanism.
· Content-Type:  The type of data that is sent. 
· Content-Length: The size of the data sent. 


- Response Body -

The HTTP Response Body contains the resource that was sent by the server and requested by the client.




























